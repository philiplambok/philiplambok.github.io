I"ƒ5<p>Hampir semua tulisan di blog saya ini judulnya kalo enggak bereksperimen ya tips and trik ~/~</p>

<p>Selain karna bingung mau kasih nama judulnya apa, juga enggak yakin dengan kebenaran dari konten yang di tulis :)</p>

<p>Tulisan kali ini juga enggak akan jauh berbeda dengan tulisan yang di tulis sebelumnya: <a href="https://philiplambok.github.io/vuejs,/testing/2020/01/09/bereksperimen-dengan-mocking-object-di-vuejs.html">Bermain testing di Vue.js</a></p>

<p>Jika di tulisan sebelumnya, saya berbagi gimana cara nulis kode test dan sedikit contoh mocking di Vue.js. Tulisan kali ini lebih gimana cara nulis kode test yang benar di Vue.js (<em>best practice</em>).</p>

<p>Tulisan ini terinspirasi dari Sepuh Kent C. Dodds yang saya temukan di twit ini:</p>

<blockquote class="twitter-tweet"><p lang="en" dir="ltr">Maybe this will help justify the rational: <a href="https://t.co/MMj5eK5WQf">https://t.co/MMj5eK5WQf</a></p>&mdash; Kent C. Dodds ðŸ§¢ (@kentcdodds) <a href="https://twitter.com/kentcdodds/status/1217810669405261824?ref_src=twsrc%5Etfw">January 16, 2020</a></blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>Pada <a href="https://kentcdodds.com/blog/testing-implementation-details">tulisan itu</a>, ia berbagi bagaimana cara menulis kode test yang bener, dimana kode test kita memberikan <em>false negative</em> dan <em>false positive</em>. Silahkan baca artikel itu dahulu sebelum melanjutkan membaca artikel ini.</p>

<p>Seperti yang anda lihat di sinopsis judulnya Kent menulis:</p>

<blockquote>
  <p>Testing implementation details is a recipe for disaster.</p>
</blockquote>

<p>Pada artikel tersebut kita disarankan untuk tidak mengetes internal interface dari komponen, contohnya adalah tidak mengakses instance dari Vue.js-nya <code class="language-plaintext highlighter-rouge">wrapper.vm</code>.</p>

<p>Seperti biasa saya akan mencontohnya dengan menulis kode test menggunakan <a href="https://testing-library.com/">testing-library</a> dan akan menulis ulang dengan vue-test-utils, karena mungkin di projek anda, anda tidak menggunakan vue-test-utils.</p>

<p>Testing-library ada sebuah paket yang ditulis untuk menulis kode test secara best practice, dia seperti capybara di Rails. Testing-library akan mengetes aplikasi anda dengan <em>user-centric ways</em>, anda tidak bisa mengakses internal interface komponen anda dengan paket ini.</p>

<p>Mari kita mulai pembahasannya dengan membuat simple form input username. Ketika user mengetik namanya, maka di halaman yang sama akan mengeluarkan pesan <em>Hello, username</em>.</p>

<p>Untuk kode testnya kira-kira seperti ini:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">render</span><span class="p">,</span> <span class="nx">fireEvent</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@testing-library/vue</span><span class="dl">'</span>
<span class="k">import</span> <span class="nx">PagesIndex</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">~/pages/index.vue</span><span class="dl">'</span>

<span class="nx">describe</span><span class="p">(</span><span class="dl">'</span><span class="s1">Pages index page spec</span><span class="dl">'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nx">test</span><span class="p">(</span><span class="dl">'</span><span class="s1">Testing username form</span><span class="dl">'</span><span class="p">,</span> <span class="k">async</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="p">{</span> <span class="nx">getByText</span><span class="p">,</span> <span class="nx">getByLabelText</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">render</span><span class="p">(</span><span class="nx">PagesIndex</span><span class="p">)</span>
    <span class="c1">// Menyimpan DOM dari username inpput field (yang diambil dari labelnya) </span>
    <span class="kd">const</span> <span class="nx">usernameInput</span> <span class="o">=</span> <span class="nx">getByLabelText</span><span class="p">(</span><span class="sr">/username/i</span><span class="p">)</span>
    <span class="c1">// Menganti username input textnya menjadi 'Kokomi'</span>
    <span class="k">await</span> <span class="nx">fireEvent</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="nx">usernameInput</span><span class="p">,</span> <span class="dl">'</span><span class="s1">Kokomi</span><span class="dl">'</span><span class="p">)</span>
    <span class="c1">// Mentrigger keyup pada username field inputnya</span>
    <span class="k">await</span> <span class="nx">fireEvent</span><span class="p">.</span><span class="nx">keyUp</span><span class="p">(</span><span class="nx">usernameInput</span><span class="p">)</span>
    <span class="c1">// Mengekspektasikan ada tulisan Hello, Kokomi</span>
    <span class="nx">getByText</span><span class="p">(</span><span class="dl">'</span><span class="s1">Hello, Kokomi</span><span class="dl">'</span><span class="p">)</span>
  <span class="p">})</span>
<span class="p">})</span>
</code></pre></div></div>

<p>Untuk kode produksinya kira-kira seperti ini:</p>

<div class="language-vue highlighter-rouge"><div class="highlight"><pre class="highlight"><code># pages/index.vue

<span class="nt">&lt;</span><span class="k">template</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div&gt;</span>
    <span class="nt">&lt;p&gt;</span>Hello, <span class="nt">&lt;/p&gt;</span>
    <span class="nt">&lt;hr&gt;</span>
    <span class="nt">&lt;UsernameFieldForm</span> <span class="err">@</span><span class="na">username-changed=</span><span class="s">"changeUsername"</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/</span><span class="k">template</span><span class="nt">&gt;</span>

<span class="nt">&lt;</span><span class="k">script</span><span class="nt">&gt;</span>
<span class="k">import</span> <span class="nx">UsernameFieldForm</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">~/components/UsernameFieldForm</span><span class="dl">'</span>

<span class="k">export</span> <span class="k">default</span> <span class="p">{</span>
  <span class="na">name</span><span class="p">:</span> <span class="dl">''</span><span class="p">,</span>
  <span class="na">components</span><span class="p">:</span> <span class="p">{</span>
    <span class="nx">UsernameFieldForm</span>
  <span class="p">},</span>
  <span class="nx">data</span> <span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="p">{</span>
      <span class="na">username</span><span class="p">:</span> <span class="dl">'</span><span class="s1">world</span><span class="dl">'</span>
    <span class="p">}</span>
  <span class="p">},</span>
  <span class="na">methods</span><span class="p">:</span> <span class="p">{</span>
    <span class="nx">changeUsername</span> <span class="p">(</span><span class="nx">updatedUsername</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">username</span> <span class="o">=</span> <span class="nx">updatedUsername</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="nt">&lt;/</span><span class="k">script</span><span class="nt">&gt;</span>
</code></pre></div></div>

<div class="language-vue highlighter-rouge"><div class="highlight"><pre class="highlight"><code># components/UsernameFieldForm.vue

<span class="nt">&lt;</span><span class="k">template</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div&gt;</span>
    <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"username"</span><span class="nt">&gt;</span>Username<span class="nt">&lt;/label&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"username"</span> <span class="na">v-model=</span><span class="s">"username"</span> <span class="err">@</span><span class="na">keyup=</span><span class="s">"updateUsername"</span> <span class="na">name=</span><span class="s">"username"</span> <span class="na">type=</span><span class="s">"text"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/</span><span class="k">template</span><span class="nt">&gt;</span>

<span class="nt">&lt;</span><span class="k">script</span><span class="nt">&gt;</span>
<span class="k">export</span> <span class="k">default</span> <span class="p">{</span>
  <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">UsernameFieldForm</span><span class="dl">'</span><span class="p">,</span>
  <span class="nx">data</span> <span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="p">{</span>
      <span class="na">username</span><span class="p">:</span> <span class="dl">''</span>
    <span class="p">}</span>
  <span class="p">},</span>
  <span class="na">methods</span><span class="p">:</span> <span class="p">{</span>
    <span class="nx">updateUsername</span> <span class="p">()</span> <span class="p">{</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">$emit</span><span class="p">(</span><span class="dl">'</span><span class="s1">username-changed</span><span class="dl">'</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">username</span><span class="p">)</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="nt">&lt;/</span><span class="k">script</span><span class="nt">&gt;</span>
</code></pre></div></div>

<p>Dan jalankan kode testnya, maka kode testnya akan passed.</p>

<p>Kode test diatas adalah kode test yang di rekomendasikan. Jika anda ingin melakukan refactor mengganti event triggernya dari <code class="language-plaintext highlighter-rouge">username-changed</code> to <code class="language-plaintext highlighter-rouge">username-change</code> kode test tersebut akan passed dan tidak memberikan <em>false negative</em>, karena kita tidak mengekspektasikan nama <em>emitted</em>-nya.</p>

<p>Jika kita ingin menulis kode test tersebut dengan versi <em>vue-test-utils</em>, maka anda dapat menulisnya kira-kira seperti ini:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">mount</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@vue/test-utils</span><span class="dl">'</span>
<span class="k">import</span> <span class="nx">Vue</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">vue</span><span class="dl">'</span>
<span class="k">import</span> <span class="nx">PagesIndex</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">~/pages/index.vue</span><span class="dl">'</span>

<span class="nx">describe</span><span class="p">(</span><span class="dl">'</span><span class="s1">Pages index spec by vue test utils</span><span class="dl">'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nx">test</span><span class="p">(</span><span class="dl">'</span><span class="s1">Testing username form</span><span class="dl">'</span><span class="p">,</span> <span class="k">async</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">wrapper</span> <span class="o">=</span> <span class="nx">mount</span><span class="p">(</span><span class="nx">PagesIndex</span><span class="p">)</span>
    <span class="kd">const</span> <span class="nx">usernameField</span> <span class="o">=</span> <span class="nx">wrapper</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="dl">'</span><span class="s1">#username</span><span class="dl">'</span><span class="p">)</span>
    <span class="nx">usernameField</span><span class="p">.</span><span class="nx">setValue</span><span class="p">(</span><span class="dl">'</span><span class="s1">Kokomi</span><span class="dl">'</span><span class="p">)</span>
    <span class="nx">usernameField</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="dl">'</span><span class="s1">keyup</span><span class="dl">'</span><span class="p">)</span>
    <span class="k">await</span> <span class="nx">Vue</span><span class="p">.</span><span class="nx">nextTick</span><span class="p">()</span>
    <span class="nx">expect</span><span class="p">(</span><span class="nx">wrapper</span><span class="p">.</span><span class="nx">text</span><span class="p">()).</span><span class="nx">toContain</span><span class="p">(</span><span class="dl">'</span><span class="s1">Hello, Kokomi</span><span class="dl">'</span><span class="p">)</span>
  <span class="p">})</span>
<span class="p">})</span>
</code></pre></div></div>

<hr />

<p>Terima kasih telah membaca tulisan sedernaha ini, jika anda ingin sumber kodenya bisa di lihat <a href="https://github.com/sugar-for-pirate-king/nuxt-testing-lib">disini</a>, semoga tulisan ini dapat bermamfaat bagi pembaca skalian.</p>

<p><em>Happy hacking ~</em></p>
:ET