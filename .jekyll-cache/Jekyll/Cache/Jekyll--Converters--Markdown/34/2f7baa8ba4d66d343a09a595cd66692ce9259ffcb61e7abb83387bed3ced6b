I"9d<p>Karena kebetulan di kantor kemarin ada ngerjain projek yang di dalam codebasenya pakai pattern ini, jadi sambil belajar, coba nulis disini juga :)</p>

<p>Event-driven development mungkin lebih terkenal di dunia frontend dibanding di dunia backend. Jika anda pernah menggunakan modern javascript saat ini seperti react dan vue.js mungkin anda akan familiar dengan konsep ini. Event-driven development adalah sebuah pattern yang menggunakan event sebagai flow sistemnya.</p>

<p>Pada tulisan ini saya mencoba menjelaskan konsep dari event-driven development menggunakan studi kasus. Kita akan membuat sebuah projek sederhana. Pertama kita akan menggunakan cara tradisional, lalu melakukan refactoring dengan mengimplementasikan event-driven. Untuk pattern ini saya akan menggunakan paket <a href="https://github.com/RailsEventStore/rails_event_store">rails_event_store</a>.</p>

<h3 id="desain-aplikasi">Desain Aplikasi</h3>

<p>Seperti yang sudah anda tau, kita akan membuat aplikasi api pembuat user, kira-kira desainnya seperti ini:</p>

<ul>
  <li>
    <p>Membuat user baru:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>POST /api/users

{
  "email": "pquest@gmail.com",
}
</code></pre></div>    </div>
  </li>
  <li>
    <p>Melihat informasi data dari user:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>GET /api/users/:id

{
  "email: "pquest@gmail.com",
  "status": "inactive"
}
</code></pre></div>    </div>
  </li>
  <li>
    <p>Membuat user menjadi active:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>POST /api/users/activation

{
  "id": 1
}
</code></pre></div>    </div>
  </li>
</ul>

<p>Bisa dilihat dari desain aplikasi diatas, maka kita akan membuat setidaknya tiga fitur, yaitu membuat user baru dengan status yang inactive, lalu membuat sebuah enpoint yang dapat membuat spesifik user bisa menjadi aktif.</p>

<p>Fitur terakhir kita dapat melihat informasi dari user yang bersangkutan. Pada fitur pertama dan ketiga kita akan membuatkan lognya.</p>

<p>Sekarang, mari kita membuat fiturnya satu-per-satu dari fitur pertama membuat user baru, kode specnya:</p>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">require</span> <span class="s1">'rails_helper'</span>

<span class="no">RSpec</span><span class="p">.</span><span class="nf">describe</span> <span class="s2">"Create new user"</span><span class="p">,</span> <span class="ss">type: :request</span> <span class="k">do</span>
  <span class="n">it</span> <span class="s1">'creates expected user'</span> <span class="k">do</span>
    <span class="n">post</span> <span class="s1">'/api/users'</span><span class="p">,</span> <span class="ss">params: </span><span class="p">{</span> <span class="ss">user: </span><span class="p">{</span> <span class="ss">email: </span><span class="s1">'pquest@gmail.com'</span> <span class="p">}</span> <span class="p">}</span>
    <span class="nb">binding</span><span class="p">.</span><span class="nf">pry</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">json_response</span><span class="p">[</span><span class="s1">'email'</span><span class="p">]).</span><span class="nf">to</span> <span class="n">eq</span> <span class="s1">'pquest@gmail.com'</span>
    <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="p">.</span><span class="nf">find_by</span><span class="p">(</span><span class="ss">email: </span><span class="s1">'pquest@gmail.com'</span><span class="p">)</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="p">).</span><span class="nf">to</span> <span class="n">be_inactive</span>
    <span class="n">log</span> <span class="o">=</span> <span class="no">Log</span><span class="p">.</span><span class="nf">last</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">log</span><span class="p">.</span><span class="nf">text</span><span class="p">).</span><span class="nf">to</span> <span class="n">eq</span> <span class="s1">'User with email pquest@gmail.com has been created'</span>
  <span class="k">end</span>

  <span class="kp">private</span> 

  <span class="k">def</span> <span class="nf">json_response</span>
    <span class="no">JSON</span><span class="p">.</span><span class="nf">parse</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="nf">body</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Jalankan dan lihat kode testnya menghasilkan failed test case. Lalu kita buat kode testnya menjadi passed, dengan menulis kode ini:</p>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># app/controllers/api/users_controller.rb</span>
<span class="k">module</span> <span class="nn">Api</span>
  <span class="k">class</span> <span class="nc">UsersController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
    <span class="k">def</span> <span class="nf">create</span>
      <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="n">user_params</span><span class="p">)</span>
      <span class="n">user</span><span class="p">.</span><span class="nf">save</span>
      <span class="no">Log</span><span class="p">.</span><span class="nf">create</span><span class="p">(</span><span class="ss">text: </span><span class="s2">"User with email </span><span class="si">#{</span><span class="n">user</span><span class="p">.</span><span class="nf">email</span><span class="si">}</span><span class="s2"> has been created"</span><span class="p">)</span>
      <span class="n">render</span> <span class="ss">json: </span><span class="p">{</span> <span class="ss">email: </span><span class="n">user</span><span class="p">.</span><span class="nf">email</span> <span class="p">}</span>
    <span class="k">end</span>

    <span class="kp">private</span> 

    <span class="k">def</span> <span class="nf">user_params</span>
      <span class="n">params</span><span class="p">.</span><span class="nf">require</span><span class="p">(</span><span class="ss">:user</span><span class="p">).</span><span class="nf">permit</span><span class="p">(</span><span class="ss">:email</span><span class="p">)</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="c1"># app/models/user.rb</span>
<span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
  <span class="n">enum</span> <span class="ss">status: </span><span class="p">[</span><span class="ss">:inactive</span><span class="p">]</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Fitur pertama telah berhasil kita buat, sekarang fitur kedua yaitu melihat informasi dari spesific user:</p>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">require</span> <span class="s1">'rails_helper'</span>

<span class="no">RSpec</span><span class="p">.</span><span class="nf">describe</span> <span class="s1">'Show user information'</span><span class="p">,</span> <span class="ss">type: :request</span> <span class="k">do</span>
  <span class="n">it</span> <span class="s1">'returns expected user'</span> <span class="k">do</span>
    <span class="n">user</span> <span class="o">=</span> <span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">,</span> <span class="ss">email: </span><span class="s1">'pquest@gmail.com'</span><span class="p">)</span>
    <span class="n">get</span> <span class="s2">"/api/users/</span><span class="si">#{</span><span class="n">user</span><span class="p">.</span><span class="nf">id</span><span class="si">}</span><span class="s2">"</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">json_response</span><span class="p">[</span><span class="s1">'email'</span><span class="p">]).</span><span class="nf">to</span> <span class="n">eq</span> <span class="s1">'pquest@gmail.com'</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">json_response</span><span class="p">[</span><span class="s1">'status'</span><span class="p">]).</span><span class="nf">to</span> <span class="n">eq</span> <span class="s1">'inactive'</span>
  <span class="k">end</span>

  <span class="kp">private</span> 

  <span class="k">def</span> <span class="nf">json_response</span>
    <span class="no">JSON</span><span class="p">.</span><span class="nf">parse</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="nf">body</span><span class="p">)</span>
  <span class="k">end</span>  
<span class="k">end</span>
</code></pre></div></div>

<p>Sekarang buat kodenya menjadi passed dengan kode ini:</p>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># app/controllers/api/users_controller.rb</span>
<span class="k">module</span> <span class="nn">Api</span>
  <span class="k">class</span> <span class="nc">UsersController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
    <span class="c1"># ...</span>

    <span class="k">def</span> <span class="nf">show</span>
      <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="p">.</span><span class="nf">find_by</span><span class="p">(</span><span class="ss">id: </span><span class="n">params</span><span class="p">[</span><span class="ss">:id</span><span class="p">])</span>
      <span class="n">render</span> <span class="ss">json: </span><span class="p">{</span> <span class="ss">email: </span><span class="n">user</span><span class="p">.</span><span class="nf">email</span><span class="p">,</span> <span class="ss">status: </span><span class="n">user</span><span class="p">.</span><span class="nf">status</span> <span class="p">}</span>
    <span class="k">end</span>

    <span class="c1"># ...</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Sekarang mari kita buat fitur terakhir yaitu membuat user statusnya menjadi active dari sebelumnya yang inactive.</p>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">require</span> <span class="s1">'rails_helper'</span>

<span class="no">RSpec</span><span class="p">.</span><span class="nf">describe</span> <span class="s2">"User activation"</span><span class="p">,</span> <span class="ss">type: :request</span> <span class="k">do</span>
  <span class="n">it</span> <span class="s1">'make user actives'</span> <span class="k">do</span>
    <span class="n">user</span> <span class="o">=</span> <span class="n">create</span><span class="p">(</span><span class="ss">:user</span><span class="p">,</span> <span class="ss">status: </span><span class="mi">0</span><span class="p">)</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="p">).</span><span class="nf">to</span> <span class="n">be_inactive</span>
    <span class="n">post</span> <span class="s1">'/api/users/activations'</span><span class="p">,</span> <span class="ss">params: </span><span class="p">{</span> <span class="ss">id: </span><span class="n">user</span><span class="p">.</span><span class="nf">id</span> <span class="p">}</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">json_response</span><span class="p">[</span><span class="s1">'email'</span><span class="p">]).</span><span class="nf">to</span> <span class="n">eq</span> <span class="n">user</span><span class="p">.</span><span class="nf">email</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">json_response</span><span class="p">[</span><span class="s1">'status'</span><span class="p">]).</span><span class="nf">to</span> <span class="n">eq</span> <span class="s1">'active'</span>
    <span class="n">user</span><span class="p">.</span><span class="nf">reload</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">user</span><span class="p">).</span><span class="nf">to</span> <span class="n">be_active</span>
    <span class="n">log</span> <span class="o">=</span> <span class="no">Log</span><span class="p">.</span><span class="nf">last</span>
    <span class="n">expect</span><span class="p">(</span><span class="n">log</span><span class="p">.</span><span class="nf">text</span><span class="p">).</span><span class="nf">to</span> <span class="n">eq</span> <span class="s2">"User with email </span><span class="si">#{</span><span class="n">user</span><span class="p">.</span><span class="nf">email</span><span class="si">}</span><span class="s2"> has been activated"</span>
  <span class="k">end</span>

  <span class="kp">private</span> 

  <span class="k">def</span> <span class="nf">json_response</span>
    <span class="no">JSON</span><span class="p">.</span><span class="nf">parse</span><span class="p">(</span><span class="n">response</span><span class="p">.</span><span class="nf">body</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Untuk kode produksinya:</p>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># /api/users/activations_controller.rb</span>
<span class="k">module</span> <span class="nn">Api</span>
  <span class="k">module</span> <span class="nn">Users</span>
    <span class="k">class</span> <span class="nc">ActivationsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
      <span class="k">def</span> <span class="nf">create</span>
        <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="p">.</span><span class="nf">find_by</span><span class="p">(</span><span class="ss">id: </span><span class="n">params</span><span class="p">[</span><span class="ss">:id</span><span class="p">])</span>
        <span class="n">user</span><span class="p">.</span><span class="nf">active!</span>
        <span class="no">Log</span><span class="p">.</span><span class="nf">create</span><span class="p">(</span><span class="ss">text: </span><span class="s2">"User with email </span><span class="si">#{</span><span class="n">user</span><span class="p">.</span><span class="nf">email</span><span class="si">}</span><span class="s2"> has been activated"</span><span class="p">)</span>
        <span class="n">render</span> <span class="ss">json: </span><span class="p">{</span> <span class="ss">email: </span><span class="n">user</span><span class="p">.</span><span class="nf">email</span><span class="p">,</span> <span class="ss">status: </span><span class="n">user</span><span class="p">.</span><span class="nf">status</span> <span class="p">}</span>
      <span class="k">end</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="c1"># app/models/user.rb</span>
<span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
  <span class="n">enum</span> <span class="ss">status: </span><span class="p">[</span><span class="ss">:inactive</span><span class="p">,</span> <span class="ss">:active</span><span class="p">]</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Maka, ketiga fitur sudah berjalan seperti yang di ekspektasi sekarang waktunya untuk melakukan refactoring dengan menggunakan event-driven development.</p>

<p>Kita akan menggunakan rails-event-store, maka sebelumnya silahkan tambahkan gem tersebut di Gemfile:</p>

<pre><code class="language-Gemfile">gem "rails_event_store"
</code></pre>

<p>Lalu jalankan <code class="language-plaintext highlighter-rouge">$&gt; bundle install</code>.</p>

<p>Sekarang kita lakukan setup lain yaitu database:</p>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="vg">$&gt;</span> <span class="n">string</span> <span class="n">stop</span>
<span class="vg">$&gt;</span> <span class="n">rails</span> <span class="n">generate</span> <span class="n">rails_event_store_active_record</span><span class="ss">:migration</span>
<span class="vg">$&gt;</span> <span class="n">rails</span> <span class="n">db</span><span class="ss">:migrate</span>
</code></pre></div></div>

<p>Setelah database telah berhasil di-isi sekarang kita buat global statenya:</p>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Rails</span><span class="p">.</span><span class="nf">configuration</span><span class="p">.</span><span class="nf">to_prepare</span> <span class="k">do</span>
  <span class="no">Rails</span><span class="p">.</span><span class="nf">configuration</span><span class="p">.</span><span class="nf">event_store</span> <span class="o">=</span> <span class="vg">$event_store</span> <span class="o">=</span> <span class="no">RailsEventStore</span><span class="o">::</span><span class="no">Client</span><span class="p">.</span><span class="nf">new</span>
  <span class="vg">$event_store</span><span class="p">.</span><span class="nf">subscribe</span><span class="p">(</span><span class="no">UserCreatedHandler</span><span class="p">.</span><span class="nf">new</span><span class="p">,</span> <span class="ss">to: </span><span class="p">[</span><span class="no">UserCreated</span><span class="p">])</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Kita akan merefactor fitur yang pertama, yaitu fitur membuat user baru:</p>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># app/controllers/users_controller.rb</span>
<span class="k">module</span> <span class="nn">Api</span>
  <span class="k">class</span> <span class="nc">UsersController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
    <span class="k">def</span> <span class="nf">create</span>
      <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="n">user_params</span><span class="p">)</span>
      <span class="n">user</span><span class="p">.</span><span class="nf">save</span>
      <span class="n">event</span> <span class="o">=</span> <span class="no">UserCreated</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="ss">data: </span><span class="p">{</span> <span class="ss">user: </span><span class="n">user</span> <span class="p">})</span>
      <span class="vg">$event_store</span><span class="p">.</span><span class="nf">publish</span><span class="p">(</span><span class="n">event</span><span class="p">)</span>
      <span class="n">render</span> <span class="ss">json: </span><span class="p">{</span> <span class="ss">email: </span><span class="n">user</span><span class="p">.</span><span class="nf">email</span> <span class="p">}</span>
    <span class="k">end</span>

    <span class="c1"># ...</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="c1">## app/handlers/user_created_handler.rb</span>
<span class="k">class</span> <span class="nc">UserCreatedHandler</span>
  <span class="k">def</span> <span class="nf">call</span><span class="p">(</span><span class="n">event</span><span class="p">)</span>
    <span class="n">user</span> <span class="o">=</span> <span class="n">event</span><span class="p">.</span><span class="nf">data</span><span class="p">[</span><span class="ss">:user</span><span class="p">]</span>
    <span class="n">user_email</span> <span class="o">=</span> <span class="n">user</span><span class="p">.</span><span class="nf">email</span>
    <span class="no">Log</span><span class="p">.</span><span class="nf">create</span><span class="p">(</span><span class="ss">text: </span><span class="s2">"User with email </span><span class="si">#{</span><span class="n">user_email</span><span class="si">}</span><span class="s2"> has been created"</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="c1"># app/events/user_created.rb</span>
<span class="k">class</span> <span class="nc">UserCreated</span> <span class="o">&lt;</span> <span class="no">RailsEventStore</span><span class="o">::</span><span class="no">Event</span><span class="p">;</span> <span class="k">end</span>
</code></pre></div></div>

<p>Sekarang jalankan kode testnya kembali, dan kita masih mendapat pesan sukses, artinya refactoring untuk fitur pertama kita telah berhasil.</p>

<p>Sekarang lanjut ke fitur ketiga (fitur kedua kita lewati karena memang tidak ada handlernya/log):</p>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># app/controllers/users/activations_controller.rb</span>
<span class="k">module</span> <span class="nn">Api</span>
  <span class="k">module</span> <span class="nn">Users</span>
    <span class="k">class</span> <span class="nc">ActivationsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
      <span class="k">def</span> <span class="nf">create</span>
        <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="p">.</span><span class="nf">find_by</span><span class="p">(</span><span class="ss">id: </span><span class="n">params</span><span class="p">[</span><span class="ss">:id</span><span class="p">])</span>
        <span class="n">user</span><span class="p">.</span><span class="nf">active!</span>
        <span class="n">event</span> <span class="o">=</span> <span class="no">UserActivated</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="ss">data: </span><span class="p">{</span> <span class="ss">user: </span><span class="n">user</span> <span class="p">})</span>
        <span class="vg">$event_store</span><span class="p">.</span><span class="nf">publish</span><span class="p">(</span><span class="n">event</span><span class="p">)</span>
        <span class="n">render</span> <span class="ss">json: </span><span class="p">{</span> <span class="ss">email: </span><span class="n">user</span><span class="p">.</span><span class="nf">email</span><span class="p">,</span> <span class="ss">status: </span><span class="n">user</span><span class="p">.</span><span class="nf">status</span> <span class="p">}</span>
      <span class="k">end</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="c1"># app/handlers/user_activated_handler.rb</span>
<span class="k">class</span> <span class="nc">UserActivatedHandler</span> 
  <span class="k">def</span> <span class="nf">call</span><span class="p">(</span><span class="n">event</span><span class="p">)</span>
    <span class="n">user</span> <span class="o">=</span> <span class="n">event</span><span class="p">.</span><span class="nf">data</span><span class="p">[</span><span class="ss">:user</span><span class="p">]</span>
    <span class="n">user_email</span> <span class="o">=</span> <span class="n">user</span><span class="p">.</span><span class="nf">email</span>
    <span class="no">Log</span><span class="p">.</span><span class="nf">create</span><span class="p">(</span><span class="ss">text: </span><span class="s2">"User with email </span><span class="si">#{</span><span class="n">user_email</span><span class="si">}</span><span class="s2"> has been activated"</span><span class="p">)</span>
  <span class="k">end</span> 
<span class="k">end</span>

<span class="c1"># app/events/user_activated.rb</span>
<span class="k">class</span> <span class="nc">UserActivated</span> <span class="o">&lt;</span> <span class="no">RailsEventStore</span><span class="o">::</span><span class="no">Event</span><span class="p">;</span> <span class="k">end</span>
</code></pre></div></div>

<p>Sekarang jalankan kembali testnya dan hasilnya akan kembali sukses. Artinya kita berhasil merefactoring fitur terakhir ini.</p>

<h3 id="konklusi">Konklusi</h3>
<p>Karna saya baru menggunakan atau belajar pola ini, jadi saya masih belum bisa menyarankan untuk menggunakan pola ini untuk next projek anda atau menggunakan pola ini untuk membersihkan atau refactor projek anda.</p>

<p>Tapi kelebihan yang mungkin saya rasakan mungkin dengan pola ini kode kita menjadi lebih independent, peran handlernya bisa sangat jelas dibandingkan dengan pola service objek yang mungkin harus lebih hati-hati dalam membuatnya.</p>

<p>Tapi kekuarangnya mungkin kita akan sulit melakukan track flow dari kode kita karena mungkin akan sulit menemukan sumbernya. Jadi mungkin debuggingnya caranya bisa beda dengan tradisional pada umumnya.</p>

<p>Sekali lagi saya tidak bisa menentukan mana pola yang lebih baik, karena masih baru belajar juga. Jika anda tertarik untuk kode sumbernya bisa di lihat <a href="https://github.com/sugar-for-pirate-king/try-event-store">disini</a>.</p>

<p>Terima kasih telah membaca, semoga tulisan ini dapat bermamfaat bagi pembaca skalian, thank you.</p>

<p><em>Happy hacking ~</em></p>
:ET