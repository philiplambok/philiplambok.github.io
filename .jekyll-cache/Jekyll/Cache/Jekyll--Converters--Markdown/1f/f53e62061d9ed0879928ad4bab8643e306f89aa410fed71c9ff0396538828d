I"sY<p>Sebenarnya saya sudah cukup lama ingin menulis tentang hal ini tapi entah kenapa selalu kena <em>pending</em>.</p>

<p>Tapi, karena baru saja kemarin di projek saya, saya menemukan <em>bug</em> dan saya pun kesulitan untuk <em>debuggingnya</em> karena ada kesalahan dalam menulis <em>private method</em> ini
maka akhirnya saya kesampaian juga untuk menulisnya disini.</p>

<p>Sebenernya saya juga bingung untuk memberikan judulnya karena mungkin kita tidak hanya berbicara tentang <em>private method</em>, namun juga akan berbicara tentang penggunaan <em>instance variable</em> dan bahkan <em>public method</em>.</p>

<p>Tapi karena <em>private method</em> lebih banyak berperan di tulisan ini, maka saya ambil itu sebagai judul, saja.</p>

<p>Sebelum mulai berbicara tentang <em>private method</em> saya ingin berbicara tentang <em>dependency</em> (kebergantungan).</p>

<p>Saya rasa anda pasti sudah pernah dengan bahkan mengetahui apa itu <em>dependency</em>. Singkatnya <em>dependency</em> sendiri ada jenis-jenis yang berbeda, antara lain:</p>

<ul>
  <li>
    <p><em>Dependency</em> level paket. Contohnya jika kita menggunakan Rails, Rails akan menggunakan paket <em>activerecord</em>. Ketika kita menggunakan <em>activerecord</em>, paket tersebut menggunakan paket <em>activesupport</em>. Maka, ketika kode di activerecord ada yang berubah maka implementasi dari kode Rails kita juga akan berubah.</p>

    <p><img src="/assets/paket-dependency.png" alt="Paket dependency" /></p>
  </li>
  <li>
    <p><em>Dependency</em> level kelas. Contohnya pada kelas <em>controller</em> kita sering memanggil kelas <em>model</em> artinya kelas controller kita dependency terhadap model. Maka ketika kita membuat perubahan di model, maka akan berpengaruh pada kelas controller kita.</p>

    <p><img src="/assets/class-depen.png" alt="Class dependent" /></p>
  </li>
  <li>
    <p><em>Depedency</em> level method. Contohnya ketika kita memanggil sebuah <em>method</em> dari <em>method</em> lain. Contohnya:</p>

    <div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">show</span>
  <span class="vi">@user</span> <span class="o">=</span> <span class="n">find_user</span><span class="p">(</span><span class="n">params</span><span class="p">[</span><span class="ss">:id</span><span class="p">])</span>
<span class="k">end</span>

<span class="kp">private</span>

<span class="k">def</span> <span class="nf">find_user</span><span class="p">(</span><span class="nb">id</span><span class="p">)</span>
  <span class="no">User</span><span class="p">.</span><span class="nf">find_by</span><span class="p">(</span><span class="ss">id: </span><span class="nb">id</span><span class="p">)</span>
<span class="k">end</span>
</code></pre></div>    </div>

    <p>Pada kode diatas, method <code class="language-plaintext highlighter-rouge">show</code> <em>dependent</em> terhadap method <code class="language-plaintext highlighter-rouge">find_user(id)</code>, artinya jika mengubah kode di method <code class="language-plaintext highlighter-rouge">find_user(id)</code> maka akan berpengaruh pada <em>method</em> <code class="language-plaintext highlighter-rouge">show</code>.</p>

    <p><img src="/assets/user-depend.png" alt="Function dependent" /></p>
  </li>
</ul>

<p>Kode yang memiliki banyak <em>dependency</em> adalah kode yang buruk. Misalnya anda memiliki satu kelas yang didalamnya memiliki dependent secara bertingkat hingga empat tingkat. Misalnya kelas <code class="language-plaintext highlighter-rouge">A</code> memanggil kelas <code class="language-plaintext highlighter-rouge">B</code> dan kelas <code class="language-plaintext highlighter-rouge">B</code> memanggil kelas <code class="language-plaintext highlighter-rouge">C</code>. Lalu kelas <code class="language-plaintext highlighter-rouge">C</code> memanggil kelas <code class="language-plaintext highlighter-rouge">D</code>.</p>

<p><img src="/assets/class-bad.png" alt="Bad class depedency" /></p>

<p>Maka perubahan yang dilakukan di kelas <code class="language-plaintext highlighter-rouge">D</code> akan mengakibatkan perubahan di ketiga kelas diatasnya (A/B/C). Jika ada bug di fitur tersebut mungkin anda sudah bisa membayangkan bagaimana sulitnya kita mencari bug tersebut.</p>

<p>Jika kode yang memiliki depedency seperti itu, apakah anda yakin jika mengubah kode di dalam kelas D tidak akan menghancurkan ketiga kelas yang depedent terhadapnya?</p>

<p>Uncle Bob menyebut kode ini dengan <a href="https://notherdev.blogspot.com/2013/07/code-smells-rigidity.html">rigidity</a>. Kode menjadi sulit untuk dimodifikasi karena pergantian kecil saja dapat menghancurkan kelas-kelas yang lain.</p>

<p>Kode yang baik adalah kode yang mudah untuk dimodifikasi, maka semakin kecil depedency dari sebuah kode, kode tersebut semakin baik.</p>

<p>Menghindari penggunaan depedency dalam pembuatan software sangatlah sulit dan sebenernya penggunaan dependency dengan benar dapat membuat kode menjadi bersih. Khususnya untuk level kelas, ada yang namanya konsep <em>dependency injection</em>.</p>

<p>Namun, pada tulisan ini kita tidak sedang membahas dependency level kelas, melainkan level <em>method</em>.</p>

<p>Seperti yang sudah saya sebutkan sebelumnya, dependency juga bisa terjadi pada level <em>method</em>. Kita akan membahas buruknya hal tersebut, dan bagaimana cara saya untuk mengatasinya.</p>

<p>Kode yang buruk:</p>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># frozen_string_literal: true</span>

<span class="k">module</span> <span class="nn">AuthService</span>
  <span class="c1"># Class that handling creating token when employee sign in</span>
  <span class="k">class</span> <span class="nc">CreateToken</span>
    <span class="nb">attr_reader</span> <span class="ss">:jwt_token</span><span class="p">,</span> <span class="ss">:login_url</span><span class="p">,</span> <span class="ss">:default_password</span>

    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">auth_params</span><span class="p">)</span>
      <span class="vi">@auth_params</span> <span class="o">=</span> <span class="n">auth_params</span>

      <span class="k">raise</span> <span class="s1">'Invalid auth params'</span> <span class="k">if</span> <span class="n">auth_params_empty?</span>

      <span class="vi">@username_or_email</span> <span class="o">=</span> <span class="n">auth_params</span><span class="p">[</span><span class="ss">:username_or_email</span><span class="p">]</span>
      <span class="vi">@password</span> <span class="o">=</span> <span class="n">auth_params</span><span class="p">[</span><span class="ss">:password</span><span class="p">]</span>
    <span class="k">end</span>

    <span class="k">def</span> <span class="nf">run</span>
      <span class="n">checking_credentials</span>
      <span class="n">load_default_password</span>
      <span class="n">create_jwt_token</span>
      <span class="n">create_moodle_token</span>
    <span class="k">end</span>

    <span class="kp">private</span>

    <span class="k">def</span> <span class="nf">auth_params_empty?</span>
      <span class="k">return</span> <span class="kp">true</span> <span class="k">if</span> <span class="vi">@auth_params</span><span class="p">[</span><span class="ss">:username_or_email</span><span class="p">].</span><span class="nf">nil?</span> <span class="o">||</span> <span class="vi">@auth_params</span><span class="p">[</span><span class="ss">:password</span><span class="p">].</span><span class="nf">nil?</span>
    <span class="k">end</span>

    <span class="k">def</span> <span class="nf">create_jwt_token</span>
      <span class="vi">@jwt_token</span> <span class="o">=</span> <span class="no">TokenService</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="ss">payload: </span><span class="p">{</span> <span class="ss">employee_id: </span><span class="vi">@employee</span><span class="p">.</span><span class="nf">id</span> <span class="p">}).</span><span class="nf">encoded</span>
    <span class="k">end</span>

    <span class="k">def</span> <span class="nf">checking_credentials</span>
      <span class="n">load_employee</span>

      <span class="k">return</span> <span class="kp">true</span> <span class="k">if</span> <span class="vi">@employee</span><span class="o">&amp;</span><span class="p">.</span><span class="nf">authenticate</span><span class="p">(</span><span class="vi">@password</span><span class="p">)</span>

      <span class="k">raise</span> <span class="s1">'Credentials is invalid'</span>
    <span class="k">end</span>

    <span class="k">def</span> <span class="nf">load_employee</span>
      <span class="n">load_moodle_user</span>

      <span class="vi">@employee</span> <span class="o">=</span> <span class="vi">@user</span><span class="p">.</span><span class="nf">employee</span>
    <span class="k">end</span>

    <span class="k">def</span> <span class="nf">load_default_password</span>
      <span class="vi">@default_password</span> <span class="o">=</span> <span class="vi">@employee</span><span class="p">.</span><span class="nf">default_password</span>
    <span class="k">end</span>

    <span class="k">def</span> <span class="nf">create_moodle_token</span>
      <span class="n">moodle</span> <span class="o">=</span> <span class="no">MoodleService</span><span class="o">::</span><span class="no">SignIn</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span>
        <span class="ss">username: </span><span class="vi">@user</span><span class="p">.</span><span class="nf">username</span><span class="p">,</span>
        <span class="ss">email: </span><span class="vi">@user</span><span class="p">.</span><span class="nf">email</span>
      <span class="p">)</span>

      <span class="c1"># =&gt; Requesting token to moodle website</span>
      <span class="n">moodle</span><span class="p">.</span><span class="nf">run</span>

      <span class="vi">@login_url</span> <span class="o">=</span> <span class="n">moodle</span><span class="p">.</span><span class="nf">login_url</span> <span class="c1"># =&gt; grap the moodle token</span>
    <span class="k">end</span>

    <span class="k">def</span> <span class="nf">load_moodle_user</span>
      <span class="vi">@user</span> <span class="o">=</span> <span class="no">Moodle</span><span class="o">::</span><span class="no">User</span><span class="p">.</span><span class="nf">find_by</span><span class="p">(</span>
        <span class="s1">'username = :username_or_email OR email = :username_or_email'</span><span class="p">,</span>
        <span class="ss">username_or_email: </span><span class="vi">@username_or_email</span>
      <span class="p">)</span>
      <span class="k">raise</span> <span class="s1">'Moodle user not found'</span> <span class="k">if</span> <span class="vi">@user</span><span class="p">.</span><span class="nf">nil?</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Kelas diatas sebenarnya memiliki tanggung jawab yang sangatlah simple, yaitu mengembalikan token ke <em>controller</em> jika username dan password benar.</p>

<p>Untuk garis <em>dependency</em>-nya :</p>

<p><img src="/assets/bad-arrow-d.png" alt="Bad Dependency Arrow" /></p>

<p>But wait….</p>

<p>Bagaimana jika saya menghapus saya mengubah nilai dari instance variable <code class="language-plaintext highlighter-rouge">@auth_params[:username_or_email]</code>
dari <em>method</em> <code class="language-plaintext highlighter-rouge">auth_params_empty?</code> menjadi:</p>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">auth_params_empty?</span>
  <span class="k">return</span> <span class="kp">true</span> <span class="k">if</span> <span class="vi">@auth_params</span><span class="p">[</span><span class="ss">:username_or_email</span><span class="p">].</span><span class="nf">nil?</span> <span class="o">||</span> <span class="vi">@auth_params</span><span class="p">[</span><span class="ss">:password</span><span class="p">].</span><span class="nf">nil?</span>
  <span class="vi">@auth_params</span><span class="p">[</span><span class="ss">:username_or_email</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"Changed!"</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Maka method yang menggunakan instance variable tersebut akan juga ikut berubah dalam hal ini adalah method <code class="language-plaintext highlighter-rouge">load_moodle_user</code>.
Jika method tersebut berubah keempat method yang dependent pada dirinya juga ikut berubah.</p>

<p>Oh…</p>

<p>Pada method <code class="language-plaintext highlighter-rouge">create_moodle_token</code> dan <code class="language-plaintext highlighter-rouge">create_jwt_token</code> juga menggunakan instance variable yang dibuat di kedua method <code class="language-plaintext highlighter-rouge">load_employee</code> <code class="language-plaintext highlighter-rouge">load_moodle_user</code>, maka artinya <code class="language-plaintext highlighter-rouge">create_moodle_token</code> dan <code class="language-plaintext highlighter-rouge">create_jwt_token</code> juga ikut berubah.</p>

<p>Dan dapat dibilang karena perubahan kecil di method tersebut, hampir semua <code class="language-plaintext highlighter-rouge">method</code> di kelas ini juga ikut berubah.</p>

<p>How a bad code :(</p>

<p><strong>Maka dalam menulis kode di <em>private method</em> saya memiliki aturan untuk:</strong></p>

<ol>
  <li><em>private method</em> <strong>tidak boleh menggunakan instance variable</strong>. Gunakan <em>local variable</em> yang dilempar melalui parameter.</li>
  <li><em>private method</em> <strong>tidak boleh dependent atau memanggil method yang lain</strong>. private method harus terisolasi atau berdiri sendiri.</li>
  <li><em>public method</em> menjadi <em>main method</em> yang <strong>bertanggung jawab terhadap flow algoritma dan perpindahan data antara satu private method dan private method lain</strong>. Jangan pisahkan proses flow-nya seperti yang kita lakukan sebelumnya</li>
</ol>

<p>Maka, berdasarkan aturan tersebut, saya menulis ulang kelas tersebut menjadi:</p>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># frozen_string_literal: true</span>

<span class="k">module</span> <span class="nn">AuthService</span>
  <span class="c1"># Class that handling creating token when employee sign in</span>
  <span class="k">class</span> <span class="nc">CreateToken</span>
    <span class="nb">attr_reader</span> <span class="ss">:jwt_token</span><span class="p">,</span> <span class="ss">:login_url</span><span class="p">,</span> <span class="ss">:default_password</span>

    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">username_or_email</span><span class="p">,</span> <span class="n">password</span><span class="p">)</span>
      <span class="k">raise</span> <span class="s1">'Invalid auth params'</span> <span class="k">if</span> <span class="n">username_or_email</span><span class="p">.</span><span class="nf">blank?</span> <span class="o">&amp;&amp;</span> <span class="n">password</span><span class="p">.</span><span class="nf">blank?</span>

      <span class="vi">@username_or_email</span> <span class="o">=</span> <span class="n">username_or_email</span>
      <span class="vi">@password</span> <span class="o">=</span> <span class="n">password</span>
    <span class="k">end</span>

    <span class="k">def</span> <span class="nf">run</span>
      <span class="n">moodle_user</span> <span class="o">=</span> <span class="n">find_moodle_user</span><span class="p">(</span><span class="vi">@username_or_email</span><span class="p">)</span>
      <span class="k">raise</span> <span class="s1">'Moodle user not found'</span> <span class="k">if</span> <span class="n">moodle_user</span><span class="p">.</span><span class="nf">blank?</span>

      <span class="n">employee</span> <span class="o">=</span> <span class="n">moodle_user</span><span class="p">.</span><span class="nf">employee</span>
      <span class="k">raise</span> <span class="s1">'Credentials is invalid'</span> <span class="k">unless</span> <span class="n">employee</span><span class="o">&amp;</span><span class="p">.</span><span class="nf">authenticate</span><span class="p">(</span><span class="vi">@password</span><span class="p">)</span>

      <span class="vi">@jwt_token</span> <span class="o">=</span> <span class="n">create_jwt_token</span><span class="p">(</span><span class="n">employee</span><span class="p">)</span>
      <span class="vi">@login_url</span> <span class="o">=</span> <span class="n">create_moodle_token</span><span class="p">(</span><span class="n">moodle_user</span><span class="p">)</span>
      <span class="vi">@default_password</span> <span class="o">=</span> <span class="n">employee</span><span class="p">.</span><span class="nf">default_password</span>
    <span class="k">end</span>

    <span class="kp">private</span>

    <span class="k">def</span> <span class="nf">find_moodle_user</span><span class="p">(</span><span class="n">username_or_email</span><span class="p">)</span>
      <span class="no">Moodle</span><span class="o">::</span><span class="no">User</span><span class="p">.</span><span class="nf">find_by</span><span class="p">(</span>
        <span class="s1">'username = :username_or_email OR email = :username_or_email'</span><span class="p">,</span>
        <span class="ss">username_or_email: </span><span class="n">username_or_email</span>
      <span class="p">)</span>
    <span class="k">end</span>

    <span class="k">def</span> <span class="nf">create_jwt_token</span><span class="p">(</span><span class="n">employee</span><span class="p">)</span>
      <span class="no">TokenService</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="ss">payload: </span><span class="p">{</span> <span class="ss">employee_id: </span><span class="n">employee</span><span class="p">.</span><span class="nf">id</span> <span class="p">}).</span><span class="nf">encoded</span>
    <span class="k">end</span>

    <span class="k">def</span> <span class="nf">create_moodle_token</span><span class="p">(</span><span class="n">moodle_user</span><span class="p">)</span>
      <span class="n">moodle</span> <span class="o">=</span> <span class="no">MoodleService</span><span class="o">::</span><span class="no">SignIn</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span>
        <span class="ss">username: </span><span class="n">moodle_user</span><span class="p">.</span><span class="nf">username</span><span class="p">,</span>
        <span class="ss">email: </span><span class="n">moodle_user</span><span class="p">.</span><span class="nf">email</span>
      <span class="p">)</span>
      <span class="n">moodle</span><span class="p">.</span><span class="nf">run</span>
      <span class="n">moodle</span><span class="p">.</span><span class="nf">login_url</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<p>Apakah anda merasakan perbedaannya?</p>

<p>Untuk garis <em>dependency</em>-nya kira-kira menjadi seperti ini:</p>

<p><img src="/assets/good-arrow-d.png" alt="Good Arrow Dependency" /></p>

<p>Pada kode diatas private method kita tidak memanggil private method yang lain, namun memangil kelas yang lain, yang menurut saya masih cukup baik.
Selain itu saya juga menghilangkan penggunaan <em>passing parameter by hash</em> namun menggantinya dengan <em>passing parameter by values</em> yang membuat kodenya semakin simple.</p>

<p>Karena bagi saya <em>passing by hash</em> hanya membuat kodenya menjadi semakin kompleks dan lebih sulit dibaca.
Anda bisa coba bandingkan kode dibawah ini:</p>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Passing by options(hash)</span>
<span class="no">CreateToken</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span>
  <span class="ss">username_or_email: </span><span class="n">auth_attributes</span><span class="p">[</span><span class="ss">:username_or_email</span><span class="p">],</span>
  <span class="ss">password: </span><span class="n">auth_attributes</span><span class="p">[</span><span class="ss">:password</span><span class="p">]</span>
<span class="p">)</span>

<span class="c1"># Passing by values</span>
<span class="no">CreateToken</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span>
  <span class="n">auth_attributes</span><span class="p">[</span><span class="ss">:username_or_email</span><span class="p">],</span>
  <span class="n">auth_attributes</span><span class="p">[</span><span class="ss">:password</span><span class="p">]</span>
<span class="p">)</span>

<span class="c1"># Definition (options)</span>
<span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">auth_attributes</span><span class="p">)</span>

<span class="c1"># Definition (value)</span>
<span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">username_or_email</span><span class="p">,</span> <span class="n">password</span><span class="p">)</span>
</code></pre></div></div>

<p>Kode kita menjadi lebih simple dan lebih <em>reliable</em>.</p>

<p>Memang setau saya tidak ada aturan resmi mengenai ini. Namun jika anda lebih memilih parameter passing by <em>hash</em>,
saya menyarankan untuk menggunakan <em>passing by keywords</em>, maka anda perlu mengubah kode definisinya menjadi:</p>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Before</span>
<span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">auth_attributes</span> <span class="o">=</span> <span class="p">{})</span>

<span class="c1"># After</span>
<span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">username_or_email</span><span class="p">:,</span> <span class="n">password</span><span class="p">:)</span>
</code></pre></div></div>

<p>Sekiranya segitu saja untuk tulisan kali ini, ikuti tips ini sebisa mungkin maka kode anda akan menjadi lebih bersih dan mudah untuk diubah.</p>

<p>Rule ini tidak bersifat mutlak, mungkin saja ada masalah-masalah yang memang tidak cocok dengan rule ini.</p>

<p>Terima kasih,</p>

<p><em>Happy Hacking!</em></p>
:ET